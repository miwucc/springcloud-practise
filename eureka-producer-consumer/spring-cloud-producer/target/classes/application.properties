###########����������֣��˿ڣ�ע�ᵽ�ĸ�ע�����ģ��Լ�ע�����ĵ��û���,����###########
spring.application.name=spring-cloud-producer
server.port=9900
#���eureka��������Ҫ������ʣ�����security.basic.enabled=true, security.user.name=test,security.user.password=test,����Ҫ���ö�Ӧ�������ע��
eureka.user=test
eureka.pwd=test
eureka.client.serviceUrl.defaultZone=http://${eureka.user}:${eureka.pwd}@localhost:8001/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
####################################################################################


########### actuator�˵����� ###########
#����actuator�ĵ� https://docs.spring.io/spring-boot/docs/1.5.2.RELEASE/reference/html/production-ready.html

#��������spring-boot-starter-actuator�������ʶ˵㣬����actuator��¶��root path��ר�ŵĶ˿�(��Ӧ�ö˿����ֿ�)
management.context-path=/acmonitor
management.port=10999
#������rootpathҪ��������һ��health��status·��,Ŀǰ������·��eurekaò��ֻ�ռ���������ʱû����ô�ã��������spa��Ŀǰ��spa����������������ж��佡�����
#ע�⣡��������ط��и��ӣ�������springcloud�汾=Dalston.RELASE,����Ҫ����������
##������springcloud�汾=Dalston.RELASE,����management.port�Ƿ����server.port������Ҫ��������������${management.context-path}ǰ׺
##���springcloud�汾>Dalston.RELASE,Ҳ����Dalston.SR(x),
##�����management.port=server.port����Ҫ���������healthpath��statuspath��${management.context-path}ǰ׺��\
##  ���management.port!=server.port��Ҫ����ǰ׺����������,springcloudclient���Լ�ƴ�ӡ�����ο�EurekaClientAutoConfiguration.eurekaInstanceConfigBean
##eureka.instance.health-check-url-path=${management.context-path}/health
##eureka.instance.status-page-url-path=${management.context-path}/info
#�����Dalston.RS1~Dalston.RS5����������${management.context-path}ǰ׺��������ظ�

#eureka.instance.home-page-url-path=
#��������spring-boot-starter-security ����֤actuator��¶�ӿڵİ�ȫ��
#�˵��Ϊ���ж˵�ͷ����ж˵㣬springboot1.5.2�汾Ĭ�ϵķ����ж˵�ֻ��info��health�����������ʲ���Ҫ����,�������ж˵���Ҫ����
#management.security.enabled=false�������, ���кͷ����ж˵���ʶ�����Ҫ����,��true��ʱ������ж˵㲻��Ҫ����
# .�����ǿ��ܱ�¶����Ϣ�����
#����ҲҪ�ǳ�ע��,������health���˵���˰�ȫ�����Ҫ�û����룬ҲҪ��Ӧ�ö��Ƿ����������Ӷ����ӽ���������(����springmvc��shrio������)��Ҳ��Ҫ�Լ�ض˵���зſ�����
management.security.enabled=true
#�˵㰲ȫ��֤�ļ��·�����û�������
security.basic.path=/acmonitor
security.basic.enabled=true
security.user.name=acadmin
security.user.password=acadmin123456

#�˵��Ƿ������Է��ʣ��Լ��Ƿ������ж˵������ȫ���������ɵ���
#endpoints.enabled=false �ر����ж˵�������
#endpoints.metrics.enabled=true ��������metrics�˵�������
#endpoints.sensitive=true ���ж˵��Ϊ���ж˵�
#endpoints.metrics.sensitive=true ��������metricsΪ���ж˵�
####################################################################################


###########����SPA������£���Ϊclient�˵�����#####################
#����clinet����ע��ģʽ���������Ҫ����ע���spa adminServer��ַ
#spring.boot.admin.url=http://localhost:19300
#spring.boot.admin.client.prefer-ip=true
#�����spa adminServer���ǲ����Լ�ע�ᵽeureka�Է���ģʽ�Ļ�������Ҫ�������棬��ֵspa client��������Ҫ����

#spadminServer������security��֤�Ļ����ͻ��˲���clientֱ��ע��ģʽ��ʱ��,client�˱���Ҫ���÷���˵��û������룬��������ע����ȥ����Ϊע���ʱ����Ҫ����spa adminServer�� /api/application�˿ڣ���Ҫ�û�������
#����adminServer���޷���ȷ��ȡ��Ϣ
#spring.boot.admin.username=spaadmin
#spring.boot.admin.password=spaadmin123456
##################################################################

########### ����springboot admin������actuator������£���ΪSPA client�������� ###########
#���ʹ�õ�SPA���ֿ�����actuator�˵��أ�����Ҫ����Ӧ���û���������Ϣ�ύ��SPA����eureka��SPA server�˲ſ��Է���
#����������������clientע�ᵽadminServer�ķ�ʽ��client����ֿ����˶˵���֤�Ļ�����Ҫ�Ѷ˵��û������֪adminServer��
#spring.boot.admin.url=http://localhost:8080
#spring.boot.admin.client.metadata.user.name=${security.user.name}
#spring.boot.admin.client.metadata.user.password=${security.user.password}

#����eureka�ύ��SPA Server�Է��ֵķ�ʽ,SPA�Ǳ߲���Ҫ�ٽ����κ����ã�spa server��BasicAuthHttpHeaderProvider���Զ�ȡmetamap�е�ֵ������header�з��ʶ˵�
#Eureka�е�metadataMap��ר���������һЩ�Զ�������ݣ���ע�����Ļ�������������Ҫ�˷����ĳЩ����ʱ������metadataMap��ȡ��ʵ���ϣ�ÿ��instance���и��Ե�metadataMap��map�д������Ҫ�õ������ԡ����磬���������е�eureka.instance.metadata-map.user.name�����������ɹ�ע�ᵽEureka�ϣ�SpringBootAdmin�ͻ�ȡ�õ����instance�������õ�metadataMap������ԣ�Ȼ���������ͷ����˷��������󣬷��ʴ˷����actuator���ŵĶ˵㡣
#spa adminServer ��UI�з��������Լ��ĵ�ַ��api/application/id/health������ʽ�ģ��ڲ����ߵ�zuul����client�Ķ˵�
eureka.instance.metadata-map.user.name=${security.user.name}
eureka.instance.metadata-map.user.password=${security.user.password}
eureka.instance.metadata-map.management.port=${management.port}
eureka.instance.metadata-map.management.context-path=${management.context-path}
####################################################################


#����spring-boot-starter-actuator������������ô˲������򿪽������
#����Ĭ�Ͽͻ��˺�ע�������ǲ�����������������Ƿ񽡿��ģ����ǿ��������actuator�������֮��ע�����Ļ���ݿͻ��˵�/health�˵���Ϣ���жϽ������ԣ�
#���������������飬ֻҪ�����У�ÿ�������ϱ�client��״̬����UP
#������ʹ�����У����ǿͻ����������м�����ˣ�ע������Ҳ��֪���������ʵ������.
#���ע�Ͳ�֪��Ϊɶ����eurekaClientConfigBean���Ҳ����������������ȷʵ����Ч��
#��������actuator������£�������ò�Ӱ���health�˿�·���ķ��ʣ�ֻ��ȷ���Լ��ϱ���eureka״̬֮ǰ�Ƿ���Ҫ���Լ��Ľ����������м�飬����Ϊfalse�Ļ���������health״̬Ӱ����eureka�ϱ���״̬��Ҳ���Ǽ�ʹ�м��������ˣ��ϱ�����UP�����Ƿ���health�˿ڿ��Կ�������Ѿ�down��
#��������eureka��ע���״̬ΪDOWN��ʱ�򣬵��÷�ribbon��ֱ�ӹ��˵��÷������Ϊ�˲���ĳ�����Ӱ���޷�Զ�̵��ã�����԰������������Ϊfalse������Ƿ��������springcloud admin�����м��
#�ر�ע�ᵽeureka��ʱ���������״̬����ϱ�
eureka.client.healthcheck.enabled=false
#Ĭ�ϲ�����springboot�ĸ�·����
#eureka.instance.health-check-url-path=/health
#eureka.instance.status-page-url-path=/info
#�������healthcheck�Ļ���ÿ����replicator�ϱ���ֻ���Լ������״̬(InstanceInfo�е�statueĬ��Ϊup)��
#��ȡ״̬�ķ���Ϊ��org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus
# �����޷�֪���Լ��ڲ�ĳ��ģ������⣬���Ҫ��ȫ����actuator�е�healthIndicator̽�������жϵ�ǰ״̬��Ȼ��������������з���ע������

#���ڿ�����actutor�����������ϱ��ķ��������ʱ��������ִ��󣬵�ǰע��״̬Ϊdown��
#��ע�����״̬ͬ����springcloudClient�˵Ļ�����ribbon��loadbance�׶λ���Ϊ��ʵ�������ý��й��˵���������˺�һ������ʵ��Ҳû�������ʱ��Զ�̵��ûᱨ��
#com.netflix.client.ClientException: Load balancer does not have available server for client: serviceName
#���Կ����˶˵�health�������ķ���Ҫע�⣬�м�ĳ������������˱���redis���˵���health���·����������ͻᵼ��ע�����״̬Ϊdown���ᵼ�¸÷���ʵ��ȫ����Զ�̵��ò�ͨ


#actuator��ִ������������������������˼����Ҫ�����ռ���springboot�ĸ���ָ���ʵʱ��ת��Ϣ
#���Ե㿪��actuator���е�endpoint��������Ƕ˵����˼����Ҫ���������Ⱪ¶http����Ϣ��ѯ�˵㣬����info��metric��helth��ÿ����Ӧ����ͽ�xxxEndpoint
#������health��metric��info�Ȱ������Ƕ�Ӧ��Ϣ���ռ���health�ǽ�����Ϣ�࣬ÿ������xxxHealthIndicator(����ָ��)�������ֻ�ϵͳ���������Ľ�����Ϣ,����redis,rabbit��
#info����ľͽ�xxxContributor(��˼����ĳ����Ϣ׫����),metrics����ĸ���������ۼ�ָ����Ϣ�Ϳ��õ���Ӧ�Ĺ������������Gauge


#����eureka.instance��ͷ�����ý�������ʵ�����ã��������Կ�EurekaInstanceConfigBean,ʵ�������кܴ�һ����������Ԫ��Ϣ������ע���ʱ���͸�ע������
#ע��ʵ��ID,��������ͬһ����ͬʵ����Ĭ���ǲ�ȡ������+�˿�,���磺localhost:spring-cloud-producer:9000
#Ҫע�Ȿ���Ƿ��а�װwiresharkһ���ץ�������Զ�����Npcap Loopback adapter����spring.cloud.client.ipAddressȡ��ip����
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}


#ע�������ķ����������ʱ�䣬Ĭ��30s����˼��ÿ30s��Ҫ�ͻ��˷���ע�ᵽע��������ά���������ڵ�һ��ע���ʱ������������·Ÿ������ṩ��
#eureka.instance.lease-renewal-interval-in-seconds=30
#����ע������,����������û����������Ϊ����ʱЧ��ʱ��Ĭ��90s
#eureka.instance.lease-expiration-duration-in-seconds=90
#���������Ĳ�����һ���첽�����������ʧ�ܣ�����2��ָ����ʽ�ӳ����Ե�ʱ�䣬ֱ���ﵽeureka.instance.leaseRenewalIntervalInSeconds * eureka.client.heartbeatExecutorExponentialBackOffBound�������,֮��һֱ���������ֵ��Ϊ���Լ����ֱ���������ӵ�Eureka server���������³������ӵ�Eureka server�Ĵ����ǲ������Ƶġ�

#�Ƿ�ע�ᵽeureka,Ĭ��Ϊtrue
eureka.client.register-with-eureka=true
#lient��Eureka server���������͸���ע����Ϣ�ǲ���ͬ�ģ�InstanceInfoҲ�Թ̶���Ƶ�ʷ��͵�Eureka server����Щ��Ϣ��Eureka client�������40s��ͨ��eureka.client.initialInstanceInfoReplicationIntervalSeconds���ã��״η��ͣ�֮��ÿ��30s(ͨ��eureka.client.instanceInfoReplicationIntervalSeconds����)���ˢ��һ�α��ط���״̬statusInfo��
#��������������ݵ�ǰorg.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus������ȡ����������õ�ʵ������ʵ����״̬(UP/DOWN�ȵ�)���ϱ���ע�����Ľ��и��Ǳ���״̬��Ϣ����ʱ��������InstanceInfoReplicator��Ȼ��renew���������ʱ�������״̬����ע������
#���յ��ý������Ľ���״̬���ռ�����CompositeHealthIndicator������ǰ����еĽ������˵㶼���ɵ�������
eureka.client.initial-instance-info-replication-interval-seconds=40
eureka.client.instance-info-replication-interval-seconds=30
#DiscoveryClient��Ϊspringcloud�ĳ��࣬����������Ϊ����ͻ���������ʱ����ķ�����
#com.netflix.discovery.DiscoveryClient.initScheduledTasks
#�÷����ᴴ���ܶ����ʱ����������һ����InstanceInfoReplicator�Ķ�ʱ����Ҳ��һ����renew�Ķ�ʱ����renew������ע������������ϱ�ˢ�·����״̬(up/down),��Replicator��ʱ�����һ����ע������register��Ȼ��ͬʱ����
#ÿeureka.client.instance-info-replication-interval-secondsʱ��ͨ��EurekaHealthCheckHandler.getStatus����ˢ��һ�±��ط���״̬��Ȼ��renew�����ʱ�򣬻�ѵ�ǰ״̬���Ϸ��͸�ע�����ġ�
#�ͻ����ϴ���״̬��ע������ֻ���������͸�ʹ�����б��·�������ribbon������ֵõ����б���״̬����up�Ļ����򲻻�������ת������ʵ����ȥ��




#�Ƿ�����ұ���ģʽ��Ĭ����true,�����false��һ�������������ȶ�״̬���ֱ���Ƴ������б�,��������Ϊtrue
#��eruka���������Կ�����Renews threshold��Renews(last min)������ʾ���ֱ����Ԥ��ÿ���ӵ�ǰע�����������ܴ�������
#ʵ�����1����������ܴ��������Renews(last min)<Renews threshold,����д��ĺ�����ʾ�����ڽ����У���ʾ�����˱���ģʽ
#EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY��RE NOT.
# RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.
# ����ģʽ����˼��ע�����ĺ�ĳЩ����֮���������ȶ�������ע�����Ĳ������Щ����ӷ����б����Ƴ���
# ��Ϊһ����������״̬�������ĳ������ʵ���Ƴ��Ļ���������ֻ�Ǹ÷���ʵ����ע������֮�����粻�ã����Ǻͷ��񱻵�����֮���Ǻõģ�һ���Ƴ�ֱ�ӾͲ�������
# Renews threshold =����ʵ����*2(��˼��Ĭ��30s����һ��)*0.85(eureka.server.renewal-percent-threshold�����ã�Ĭ��0.85)
# eureka.server.enable-self-preservation=true

# ������������ο�:EurekaServerConfigBean��
# eurekaע�����ĶԿͻ��˵�����rest��������ο���:
#
#
#EurekaAutoServiceRegistration������spring�����Ĺر��¼������Կ�����org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(org.springframework.context.event.ContextClosedEvent)
#����ر��˵�ǰ�¼��������õ���com.netflix.discovery.DiscoveryClient.unregister����
#
#
#

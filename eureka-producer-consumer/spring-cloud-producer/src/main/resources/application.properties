spring.application.name=spring-cloud-producer
server.port=9000
eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
#如果注册中心开启了服务效验，则需要在连接中配置服务密码
#eureka.client.serviceUrl.defaultZone=<username>:<password>@http://localhost:8000/eureka/,<username>:<password>@http://localhost:8001/eureka/

#增加spring-boot-starter-actuator依赖后可以设置此参数，打开健康检查
#本来默认客户端和注册中心是采用心跳续租来检查是否健康的，但是开启了这个actuator健康检查之后，注册中心会根据客户端的/health,/info端点信息来判断健康特性，
#这样即使心跳有，但是客户端依赖的中间件挂了，注册中心也可知晓这个服务实例挂了.
#这个注释不知道为啥不在eurekaClientConfigBean中找不到，但是这个配置确实是有效的
eureka.client.healthcheck.enabled=true
#默认采用了springboot的根路径
#eureka.instance.health-check-url=
#eureka.instance.status-page-url=


#所有eureka.instance开头的配置叫做服务实例配置，相关类可以看EurekaInstanceConfigBean,实例配置有很大一部分是配置元信息最后会在注册的时候发送给注册中心
#注册实例ID,用于区分同一服务不同实例。默认是采取主机名
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}


#注册上来的服务的续租间隔时间，默认30s，意思是每30s需要客户端服务注册到注册中心来维持心跳，在第一次注册的时候会把这个参数下放给服务提供者
eureka.instance.lease-renewal-interval-in-seconds=30
#超过多少秒没有续租则认为服务时效超时，默认90s
eureka.instance.lease-expiration-duration-in-seconds=90
#是否打开自我保护模式，默认是true,如果是false则一旦触发心跳不稳定状态则会直接移除服务列表,建议设置为true
#在eruka管理界面可以看到有Renews threshold和Renews(last min)两个显示，分别代表预期每分钟当前注册服务的续租总次数，和
#实际最近1分钟续租的总次数，如果Renews(last min)<Renews threshold,则会有大大的红字提示出现在界面中，提示触发了保护模式
#EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY’RE NOT.
# RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.
# 保护模式的意思是注册中心和某些服务之间心跳不稳定，但是注册中心不会把这些服务从服务列表中移除。
# 因为一旦触发保护状态，如果把某个服务实例移除的话，但可能只是该服务实例和注册中心之间网络不好，但是和服务被调用者之间是好的，一旦移除直接就不可用了
# Renews threshold =服务实例数*2(意思是默认30s续租一次)*0.85(eureka.server.renewal-percent-threshold可配置，默认0.85)
# eureka.server.enable-self-preservation=true

# 所有配置项请参考:EurekaServerConfigBean类
# eureka注册中心对客户端的所有rest请求处理请参考类:
#
#
#
#

##必须要用UTF8编码！！！！！不然不会生效!!!!
##classpath下的properties配置方式要大于1.7.0才可以，不然请使用JVM启动参数
#Sentinel 提供如下的配置方式：
#
#JVM -D 参数方式
#properties 文件方式（1.7.0 版本开始支持）
#其中，project.name 参数只能通过 JVM -D 参数方式配置，其它参数支持所有的配置方式。
#
#优先级顺序：JVM -D 参数的优先级最高。若 properties 和 JVM 参数中有相同项的配置，以 JVM 参数配置的为准。
#
#用户可以通过 -Dcsp.sentinel.config.file 参数配置 properties 文件的路径，支持 classpath 路径配置（如 classpath:sentinel.properties）。默认 Sentinel 会尝试从 classpath:sentinel.properties 文件读取配置，读取编码默认为 UTF-8。
#
#注：1.7.0 以下版本可以通过 ${user_home}/logs/csp/${project.name}.properties 配置文件进行配置（除 project.name 和日志相关配置项）。
#
#注：若您的应用为 Spring Boot 或 Spring Cloud 应用，您可以使用 Spring Cloud Alibaba，通过 Spring 配置文件来指定配置，详情请参考 Spring Cloud Alibaba Sentinel 文档。

#sentinel-core 的配置项
#指定应用的名称,若未指定，则默认解析 main 函数的类名作为应用名。实际项目使用中建议手动指定应用名。
#发现这个配置是不支持peoperties配置的。因为实际取值是SentinelConfig.getAppName：return AppNameUtil.getAppName();，需要在JVM参数里面配置-Dproject.name=xxx

#配置加载类SentinelConfigLoader。可以看源码，新版本很多bug!!!

#不建议使用1.70。，建议使用1.6.x最后一个版本,1.7还比较新太多bug
#下面的参数也不是全都可以生效的，需要参照ConfigUtil.loadPropertiesp配置加载类的源码



project.name=spring-cloud-consumer-hystrix-feign
#指定应用的类型,1.6引入 0普通 1网关
csp.sentinel.app.type=0
#单个监控日志文件的大小,默认50M 52428800
#csp.sentinel.metric.file.single.size=52428800
#监控日志文件的总数上限,默认6
#csp.sentinel.metric.file.total.count=6
#最大的有效响应时长（ms）默认4900ms，超出此值则按照此值记录 1.4.1 引入
csp.sentinel.statistic.max.rt=4900
#SPI 加载时使用的 ClassLoader，默认为给定类的 ClassLoader，若配置 context 则使用 thread context ClassLoader 1.7.0 引入，默认default
#csp.sentinel.spi.classloader=default

#日志相关配置项
#文件路径 1.3引入,默认 ${user.home}/logs/csp/
csp.sentinel.log.dir=D:/logs/csp
#日志文件名中是否加入进程号，用于单机部署多个应用的情况 1.3.0 引入
csp.sentinel.log.use.pid=false
#Record 日志输出的类型，file 代表输出至文件，console 代表输出至终端 1.6.2 引入
#csp.sentinel.log.output.type=console
csp.sentinel.log.output.type=file

# sentinel-transport-common 监控台相关配置项
#控制台的地址，指定控制台后客户端会自动向该地址发送心跳包。地址格式为：hostIp:port
csp.sentinel.dashboard.server=127.0.0.1:8080
# 心跳包发送周期，单位毫秒 非必需，若不进行配置，则会从相应的 HeartbeatSender 中提取默认值
#csp.sentinel.heartbeat.interval.ms
# 本地启动 HTTP API Server 的端口号,默认，是一个接口端点,如果你同一台机器又不是docker话，这个端口号你只要不配置，也不会重复，
# 如果本地发现默认的8719被占用了，循环尝试端口是否被占用，每个端口尝试三次，若被占用则取下一个+1端口，一直到可用的端口返回 方便dashboard反向查询监控日志，然后传输到dashboad上显示，所以上面的日志保持地址非常重要，保存了性能metric日志，dashboard会来进行查询取走
#csp.sentinel.api.port=8719
# 指定心跳包中本机的 IP，若不指定则通过 HostNameUtil 解析；该配置项多用于多网卡环境
#csp.sentinel.heartbeat.client.ip=-
# 这里配置本地IP方便快速连接反查
csp.sentinel.heartbeat.client.ip=127.0.0.1